source('~/Master\'s Thesis/Modeling/Josh/2017 Model/Model Run/Analysis (R)/One Model Analysis 2017.R', echo=TRUE)
head(ci.model)
head(ci.model$cond)
View(timeseries.error)
head(ci.cond)
head(ci.model$cond)
head(ci.meas)
ci.cond <- merge(select(ci.model$cond, Date, Specific.Conductivity), select(ci.meas, Date, Specific.Conductivity), by = 'Date')
head(ci.cond)
source('~/Master\'s Thesis/Modeling/Josh/2017 Model/Model Run/Analysis (R)/One Model Analysis 2017.R', echo=TRUE)
ci.cond <- merge(select(ci.model$cond, Date, Specific.Conductivity), select(ci.meas, Date, Specific.Conductivity), by = 'Date')
ci.cond
head(ci.meas)
# Observed
ci.meas <- read.csv("C:/Users/Josh Soper/Documents/Master's Thesis/Modeling/Josh/2017 Model/Model Run/Measured Data/2017CI_Measured_Corrected.csv")
head(ci.meas)
# Observed
ci.meas <- read.csv("C:/Users/Josh Soper/Documents/Master's Thesis/Modeling/Josh/2017 Model/Model Run/Measured Data/2017CI_Measured_Corrected.csv")
ci.meas$Date <- as.Date(ci.meas$Date)
# Observed
ci.meas <- read.csv("C:/Users/Josh Soper/Documents/Master's Thesis/Modeling/Josh/2017 Model/Model Run/Measured Data/2017CI_Measured_Corrected.csv")
head(ci.meas)
# Observed
ci.meas <- read.csv("C:/Users/Josh Soper/Documents/Master's Thesis/Modeling/Josh/2017 Model/Model Run/Measured Data/2017CI_Measured_Corrected.csv")
ci.meas$Date <- as.Date(ci.meas$Date)
head(ci.meas)
ci.meas$Date <- as.Date(ci.meas$Date, format = '%m/%d/%Y')
head(ci.meas)
origin
ci.meas$Date <- as.Date(ci.meas$Date, format = '%m/%d/%Y', origin = origin)
head(ci.meas)
# Observed
ci.meas <- read.csv("C:/Users/Josh Soper/Documents/Master's Thesis/Modeling/Josh/2017 Model/Model Run/Measured Data/2017CI_Measured_Corrected.csv")
ci.meas$Date <- as.Date(ci.meas$Date, format = '%m/%d/%Y', origin = origin)
# Observed
ci.meas <- read.csv("C:/Users/Josh Soper/Documents/Master's Thesis/Modeling/Josh/2017 Model/Model Run/Measured Data/2017CI_Measured_Corrected.csv")
# Observed
ci.meas <- read.csv("C:/Users/Josh Soper/Documents/Master's Thesis/Modeling/Josh/2017 Model/Model Run/Measured Data/2017CI_Measured_Corrected.csv")
ci.meas$Date <- as.Date(ci.meas$Date, format = '%m/%d/%Y', origin = origin)
head(ci.meas)
source('~/Master\'s Thesis/Modeling/Josh/2017 Model/Model Run/Analysis (R)/One Model Analysis 2017.R', echo=TRUE)
ci.cond <- merge(select(ci.model$cond, Date, Specific.Conductivity), select(ci.meas, Date, Specific.Conductivity), by = 'Date')
names(ci.cond) <- c("Date", "Sim", "Obs")
head(ci.cond)
tail(ci.cond)
rmse.default(ci.cond$Sim, ci.cond$Obs)
rmse.default()
rmse.default
head(ci.cond$Sim-ci.cond$Obs)
tail(ci.cond$Sim-ci.cond$Obs)
tail(ci.cond$Sim-ci.cond$Obs)^2
mean(tail(ci.cond$Sim-ci.cond$Obs)^2, na.rm = T)
(ci.cond$Sim-ci.cond$Obs)^2
tail(ci.cond)
View(CosgroveResults)
source('~/Master\'s Thesis/Modeling/Josh/2017 Model/Model Run/Analysis (R)/One Model Analysis 2017.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2017 Model/Model Run/Analysis (R)/One Model Analysis 2017.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2018 Model/Model Run/Analysis (R)/2018 One Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2018 Model/Model Run/Analysis (R)/2018 One Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/R/Analysis/Baseline Optimum Comp.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/R/Analysis/Baseline Optimum Comp.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2018 Model/Model Run/Analysis (R)/2018 One Model Analysis.R', echo=TRUE)
head(ci.model)
head(ci.meas)
bn.cond
head(profile)
source('~/Master\'s Thesis/Modeling/Josh/2018 Model/Model Run/Analysis (R)/2018 One Model Analysis.R', echo=TRUE)
bn.cond
source('~/Master\'s Thesis/Modeling/Josh/2018 Model/Model Run/Analysis (R)/2018 One Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2018 Model/Model Run/Analysis (R)/2018 One Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2018 Model/Model Run/Analysis (R)/2018 One Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2018 Model/Model Run/Analysis (R)/2018 One Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
script.dir <- dirname(sys.frame(1)$ofile)
sys.frame(1)
sys.frame(which = 0)
sys.frame(which = 0)$ofile
frame_files <- lapply(sys.frames(), function(x) x$ofile)
frame_files <- Filter(Negate(is.null), frame_files)
PATH <- dirname(frame_files[[length(frame_files)]])
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
areas
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
head(conductivity)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
head(chloride)
head(flows)
source('~/Master\'s Thesis/Modeling/Josh/R/Analysis/Baseline Optimum Comp.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/R/Analysis/Baseline Optimum Comp.R', echo=TRUE)
error.dfs
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
error
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
tmp <- sparse.data(tmp, 0) #no data subsetting
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
tribs
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
start.date = '2000-01-01'
end.date = '2019-12-31'
flows <- return.flows(start.date, end.date)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
ggplot(loads) +
geom_boxplot(aes(x = factor(Tributary, levels = load.orders[-8]), y = Loading)) +
annotate("text", x='Quinapoxet River', y=0.97, label = 'a)', fontface = 2) +
labs(y = "BLI", x = element_blank(), alpha = 'Percent Impervious Surface (%)') +
scale_y_continuous(limits = c(0.5,1), breaks = seq(.50,1,0.1), expand = c(0,0)) +
scale_x_discrete(labels = abb[-8]) +
theme_bw(base_size = 10) +
theme(plot.title = element_text(hjust=0.5, face = 'bold'),
legend.position = 'top',
panel.background = element_rect(color = 'black', fill = NA),
strip.text = element_text(face = 'bold'),
panel.grid.major.y = element_line(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.spacing.x = unit(6, 'mm'))
ggplot(loads) +
geom_boxplot(aes(x = factor(Tributary, levels = load.orders[-8]), y = Loading)) +
annotate("text", x='Quinapoxet River', y=0.97, label = 'a)', fontface = 2) +
labs(y = "BLI", x = element_blank(), alpha = 'Percent Impervious Surface (%)') +
scale_y_continuous(limits = c(0.5,1), breaks = seq(.50,1,0.1), expand = c(0,0)) +
scale_x_discrete(labels = abb[-8]) +
theme_bw(base_size = 10) +
theme(plot.title = element_text(hjust=0.5, face = 'bold'),
legend.position = 'top',
panel.background = element_rect(color = 'black', fill = NA),
strip.text = element_text(face = 'bold'),
panel.grid.major.y = element_line(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.spacing.x = unit(6, 'mm'))
ggplot(loads) +
geom_boxplot(aes(x = factor(Tributary, levels = load.orders[-8]), y = Loading)) +
annotate("text", x='Quinapoxet River', y=0.97, label = 'a)', fontface = 2) +
labs(y = "BLI", x = element_blank(), alpha = 'Percent Impervious Surface (%)') +
scale_y_continuous(limits = c(0.5,1), breaks = seq(.50,1,0.1), expand = c(0,0)) +
scale_x_discrete(labels = abb[-8]) +
theme_bw(base_size = 10) +
theme(plot.title = element_text(hjust=0.5, face = 'bold'),
legend.position = 'top',
panel.background = element_rect(color = 'black', fill = NA),
strip.text = element_text(face = 'bold'),
panel.grid.major.y = element_line(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.spacing.x = unit(6, 'mm'))
source('~/Master\'s Thesis/Research/Chloride Loading Models/LOADEST Devel.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/Loading.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/Loading.R', echo=TRUE)
rm(list = ls())
source('Data_Init.R')
rm(list = ls())
loadest.folder <- "C:/Users/Josh Soper/Documents/Master's Thesis/Research/Chloride Loading Models"
setwd(loadest.folder)
source('Data_Init.R')
rm(list = ls())
loadest.folder <- "C:/Users/Josh Soper/Documents/Master's Thesis/Research/LOADEST-DCR"
setwd(loadest.folder)
source('Data_Init.R')
loadest.folder <- "C:/Users/Josh Soper/Documents/Master's Thesis/Research/LOADEST - DCR"
setwd(loadest.folder)
source('Data_Init.R')
source('~/Master\'s Thesis/Research/LOADEST - DCR/Loading_Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/Loading_Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/Loading_Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
flows <- return.flows(start.date, end.date)
start.date = '2000-01-01'
end.date = '2019-12-31'
flows <- return.flows(start.date, end.date)
tribs <- names(flows)[-1]
chloride <- cl.edit(conductivity, start.date, end.date)
chloride <- spread(chloride, "Site", "Chloride")
loadest.models <- list()
write.report = T
sep.filer <- 'hysep-l'
tribs
tributary <- tribs[1]
source <- return.source(flows = flows, chloride = chloride, source = flowsource, tributary = tributary, sep.filter = sep.filter,
start.date = start.date,end.date = end.date)
sep.filt5er <- 'hysep-l'
sep.filter <- 'hysep-l'
source <- return.source(flows = flows, chloride = chloride, source = flowsource, tributary = tributary, sep.filter = sep.filter,
start.date = start.date,end.date = end.date)
flowsource <- 'Total'
source <- return.source(flows = flows, chloride = chloride, source = flowsource, tributary = tributary, sep.filter = sep.filter,
start.date = start.date,end.date = end.date)
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
start.date = '2000-01-01'
end.date = '2019-12-31'
flows <- return.flows(start.date, end.date)
tribs <- names(flows)[-1]
chloride <- cl.edit(conductivity, start.date, end.date)
chloride <- spread(chloride, "Site", "Chloride")
tribs <- names(flows)[-1]
all.flows <- add.baseflow(flows, areas, tribs, sep.filter = sep.filter, start.date = start.date, end.date = end.date)
sep.filer <- 'hysep-l'
all.flows <- add.baseflow(flows, areas, tribs, sep.filter = sep.filter, start.date = start.date, end.date = end.date)
sep.filter <- 'hysep-l'
all.flows <- add.baseflow(flows, areas, tribs, sep.filter = sep.filter, start.date = start.date, end.date = end.date)
baseflow <- spread(subset(all.flows, Flowtype == 'Baseflow'), 'Site', 'Flow')
runoff <- spread(subset(all.flows, Flowtype == 'Runoff'), 'Site', 'Flow')
# set negative runoffs to zero (generally very small numbers)
runoff[,3:ncol(runoff)][runoff[,3:ncol(runoff)]<0] <- 0
total <- spread(subset(all.flows, Flowtype == 'Total'), 'Site', 'Flow')
if (source == 'Total') {
Q <- select(flows, Date, tributary)
C <- select(chloride, Date, tributary)
}
source <- 'Total'
if (source == 'Total') {
Q <- select(flows, Date, tributary)
C <- select(chloride, Date, tributary)
}
tributary <- 'Gates.Brook'
if (source == 'Total') {
Q <- select(flows, Date, tributary)
C <- select(chloride, Date, tributary)
}
Q
C
source <- 'Baseflow'
if (source == 'Baseflow') {
Q <- select(baseflow, Date, tributary)
C <- bflow.dom(baseflow = baseflow, total = total, chloride = chloride, tributary, threshold, start.date, end.date)
}
Q
C
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
start.date = '2000-01-01'
end.date = '2019-12-31'
filter.list = c('hysep-l', 'hysep-f', 'hysep-s')
flowsource.list = c('TOtal', 'Baseflow')
flows <- return.flows(start.date, end.date)
tribs <- names(flows)[-1]
chloride <- cl.edit(conductivity, start.date, end.date)
chloride <- spread(chloride, "Site", "Chloride")
loadest.models <- list()
write.report = T
for (tributary in tribs) {
source <- return.source(flows = flows, chloride = chloride, source = flowsource, tributary = tributary, sep.filter = sep.filter,
start.date = start.date,end.date = end.date)
tmp <- generate.data(flows = source$Q, wq = source$C)
load.mod <- return.best.model(data = tmp)
# load.mod <- return.load.mod(tmp = tmp, no. = 7)
if (write.report == T) {
wd <- getwd()
setwd(file.path(wd,"reports"))
loadReport(load.mod, paste(tributary, flowsource, sep.filter))
setwd(wd)
}
dat <- load.obs.sim(tributary = tributary,load.mod = load.mod, flow = source$Q, tmp = tmp)
loadest.models[[tributary]] <- loadest.plts(dat = dat, load.mod = load.mod, tributary = tributary, sep.filter = sep.filter)
pdf(file.path(loadest.folder, 'figures', paste(flowsource, sep.filter, "Loadest Models (Flow and Time).pdf")), width = 10, height = 7)
for (plt in loadest.models) {
grid.draw(plt)
grid.newpage()
}
dev.off()
}
flowsource <- 'hysep-l'
sep.filter <- 'hysep-l'
flowsource <- 'Baseflow'
for (tributary in tribs) {
source <- return.source(flows = flows, chloride = chloride, source = flowsource, tributary = tributary, sep.filter = sep.filter,
start.date = start.date,end.date = end.date)
tmp <- generate.data(flows = source$Q, wq = source$C)
load.mod <- return.best.model(data = tmp)
# load.mod <- return.load.mod(tmp = tmp, no. = 7)
if (write.report == T) {
wd <- getwd()
setwd(file.path(wd,"reports"))
loadReport(load.mod, paste(tributary, flowsource, sep.filter))
setwd(wd)
}
dat <- load.obs.sim(tributary = tributary,load.mod = load.mod, flow = source$Q, tmp = tmp)
loadest.models[[tributary]] <- loadest.plts(dat = dat, load.mod = load.mod, tributary = tributary, sep.filter = sep.filter)
pdf(file.path(loadest.folder, 'figures', paste(flowsource, sep.filter, "Loadest Models (Flow and Time).pdf")), width = 10, height = 7)
for (plt in loadest.models) {
grid.draw(plt)
grid.newpage()
}
dev.off()
}
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
file.path(stats, paste(sep.filter,'stats.xlsx', sep = '_'))
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/LOADEST_Init.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/Loading_Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/R/LOADEST_Init.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/R/LOADEST_Init.R', echo=TRUE)
source('~/Master\'s Thesis/Research/LOADEST - DCR/R/Loading_Analysis.R', echo=TRUE)
